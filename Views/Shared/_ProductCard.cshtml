@model Shopping_Laptop.Models.ProductModel

<div class="card h-100 product-card">
    <div class="position-relative">
        <img src="@Model.Image" class="card-img-top" alt="@Model.Name">
        @if (Model.Discount > 0)
        {
            <div class="position-absolute top-0 end-0 bg-danger text-white px-2 py-1 m-2 rounded">
                -@Model.Discount%
            </div>
        }
        @if (Model.Quantity <= 0)
        {
            <div class="position-absolute top-0 start-0 bg-secondary text-white px-2 py-1 m-2 rounded">
                Hết hàng
            </div>
        }
        <div class="product-overlay">
            <div class="d-flex justify-content-center align-items-center h-100">
                <a href="@Url.Action("Details", "Product", new { id = Model.Id })" 
                   class="btn btn-light btn-sm me-2" 
                   data-bs-toggle="tooltip" 
                   title="Xem chi tiết">
                    <i class="fas fa-eye"></i>
                </a>
                <a href="#" 
                   class="btn btn-light btn-sm me-2 add-to-wishlist" 
                   data-product-id="@Model.Id"
                   data-bs-toggle="tooltip" 
                   title="Thêm vào yêu thích">
                    <i class="far fa-heart"></i>
                </a>
                @if (Model.Quantity > 0)
                {
                    <a href="#" 
                       class="btn btn-light btn-sm add-to-cart" 
                       data-product-id="@Model.Id"
                       data-bs-toggle="tooltip" 
                       title="Thêm vào giỏ">
                        <i class="fas fa-shopping-cart"></i>
                    </a>
                }
            </div>
        </div>
    </div>
    <div class="card-body">
        <h5 class="card-title product-name">
            <a href="@Url.Action("Details", "Product", new { id = Model.Id })" class="text-decoration-none text-dark">
                @Model.Name
            </a>
        </h5>
        <p class="card-text text-muted small mb-2">
            <a href="@Url.Action("Index", "Category", new { id = Model.CategoryId })" class="text-decoration-none text-muted">
                @Model.Category?.Name
            </a>
        </p>
        <div class="d-flex justify-content-between align-items-center">
            <div>
                @if (Model.Discount > 0)
                {
                    <span class="text-decoration-line-through text-muted me-2">
                        @Model.Price.ToString("N0")₫
                    </span>
                    <span class="text-danger fw-bold">
                        @((Model.Price * (100 - Model.Discount) / 100).ToString("N0"))₫
                    </span>
                }
                else
                {
                    <span class="fw-bold">@Model.Price.ToString("N0")₫</span>
                }
            </div>
            <div class="text-muted small">
                <i class="fas fa-star text-warning"></i>
                @Model.Rating
            </div>
        </div>
    </div>
</div>

<style>
.product-card {
    border: none;
    transition: all 0.3s ease;
}

.product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
}

.product-card .card-img-top {
    height: 200px;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.product-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.5);
    opacity: 0;
    transition: opacity 0.3s ease;
    display: flex;
    justify-content: center;
    align-items: center;
}

.product-card:hover .product-overlay {
    opacity: 1;
}

.product-name {
    font-size: 1rem;
    line-height: 1.4;
    height: 2.8em;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
}

.btn-light {
    background: white;
    border: none;
    width: 35px;
    height: 35px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
}

.btn-light:hover {
    background: var(--secondary-color);
    color: white;
}
</style>

<script>
$(document).ready(function() {
    // Initialize tooltips
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    });

    // Add to cart functionality
    $('.add-to-cart').click(function(e) {
        e.preventDefault();
        var productId = $(this).data('product-id');
        var $btn = $(this);
        
        $btn.addClass('loading');
        
        $.post('/Cart/AddToCart', { productId: productId }, function(response) {
            if (response.success) {
                showToast('success', 'Đã thêm sản phẩm vào giỏ hàng');
            } else {
                showToast('error', response.message || 'Có lỗi xảy ra');
            }
        })
        .fail(function() {
            showToast('error', 'Không thể thêm sản phẩm vào giỏ hàng');
        })
        .always(function() {
            $btn.removeClass('loading');
        });
    });

    // Add to wishlist functionality
    $('.add-to-wishlist').click(function(e) {
        e.preventDefault();
        var productId = $(this).data('product-id');
        var $btn = $(this);
        
        $btn.addClass('loading');
        
        $.post('/Home/AddToWishlist', { productId: productId }, function(response) {
            if (response.success) {
                $btn.find('i').removeClass('far').addClass('fas');
                showToast('success', 'Đã thêm vào danh sách yêu thích');
            } else {
                showToast('error', response.message || 'Có lỗi xảy ra');
            }
        })
        .fail(function() {
            showToast('error', 'Không thể thêm vào danh sách yêu thích');
        })
        .always(function() {
            $btn.removeClass('loading');
        });
    });
});

function showToast(type, message) {
    const toast = $(`
        <div class="toast ${type}" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-body">
                ${message}
            </div>
        </div>
    `);
    
    $('.toast-container').append(toast);
    
    toast.toast({
        delay: 3000,
        autohide: true
    }).toast('show');

    toast.on('hidden.bs.toast', function () {
        $(this).remove();
    });
}
</script> 